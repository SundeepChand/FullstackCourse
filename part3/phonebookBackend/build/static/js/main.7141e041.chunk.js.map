{"version":3,"sources":["components/Records.js","components/AddForm.js","components/Filter.js","components/SuccessBox.js","components/ErrorBox.js","services/serverComm.js","App.js","index.js"],"names":["Record","props","record","name","number","onClick","clickHandler","Records","records","map","key","id","deleteRecordById","AddForm","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","handleClick","Filter","searchInput","handleSearchChange","success","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","SuccessBox","message","style","error","ErrorBox","baseURL","getAll","axios","get","then","response","data","addNew","newRecord","post","deleteRecord","delete","update","put","App","useState","setRecords","setNewName","setNewNumber","setSearchInput","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","serverComm","responseData","recordsToShow","filter","toLowerCase","includes","searchResult","length","window","confirm","console","log","catch","find","setTimeout","Fragment","event","target","preventDefault","alert","indexOf","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7141e041.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Record = (props) => {\r\n    return(\r\n        <li>\r\n            {props.record.name} : {props.record.number}\r\n            &nbsp;&nbsp;\r\n            <button onClick={props.clickHandler}>Delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Records = (props) => {\r\n    const generateRows = () => {\r\n        return(\r\n            props.records.map((record) => {\r\n                return(\r\n                    <Record key={record.id} record={record} \r\n                        clickHandler={ () => { \r\n                            props.deleteRecordById(record.id)\r\n                        } } \r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return(\r\n        <ol>\r\n            {generateRows()}\r\n        </ol>\r\n    )\r\n}\r\n\r\nexport default Records","import React from 'react'\r\n\r\nconst AddForm = (props) => {\r\n    return (\r\n        <form>\r\n              <div>\r\n                  Name: <input value={props.newName} onChange={props.handleNameChange}/>\r\n              </div>\r\n              <div>\r\n                  Phone: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n              </div>\r\n              <div>\r\n                  <button type=\"submit\" onClick={props.handleClick}>Add</button>\r\n              </div>\r\n          </form>\r\n    )\r\n}\r\n\r\nexport default AddForm","import React from 'react'\r\n\r\nconst Filter = (props) => (\r\n    <div>\r\n        Filter: <input value={props.searchInput} onChange={props.handleSearchChange} />\r\n    </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst success = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n}\r\n\r\nconst SuccessBox = ({message}) => {\r\n    if (message == null)\r\n    {\r\n        return null\r\n    }\r\n    return (\r\n        <div style={success}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessBox","import React from 'react'\r\n\r\nconst error = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n}\r\n\r\nconst ErrorBox = ({message}) => {\r\n    if (message == null)\r\n    {\r\n        return null\r\n    }\r\n    return (\r\n        <div style={error}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorBox","import axios from 'axios'\r\n\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = (newRecord) => {\r\n    const request = axios.post(baseURL, newRecord)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteRecord = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request\r\n}\r\n\r\nconst update = (id, newRecord) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newRecord)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, addNew, deleteRecord, update }","import React, {useState, useEffect} from 'react';\nimport Records from './components/Records'\nimport AddForm from './components/AddForm'\nimport Filter  from './components/Filter'\nimport SuccessBox from './components/SuccessBox'\nimport ErrorBox from './components/ErrorBox'\nimport serverComm from './services/serverComm'\n\nfunction App() {\n    // State for the record elements.\n    const [records, setRecords] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [searchInput, setSearchInput] = useState('')\n    const [successMessage, setSuccessMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    // Fetch the records from the server using axios.\n    useEffect(() => {\n        serverComm\n        .getAll()\n        .then(responseData => {\n            setRecords(responseData)\n        })\n    }, [])\n\n    // Create an array of records to show\n    // This will be used in the filter.\n    let recordsToShow = records.filter((record) => \n        record.name.toLowerCase().includes(searchInput.toLowerCase())\n    )\n\n    // handles the click event of the button.\n    const handleClick = (event) => {\n        event.preventDefault()\n\n        if (newName === '' || newNumber === '') {\n            alert('Please complete the form')\n        }\n        // add a new record if it does not exist.\n        else if (records.map((record) => record.name.toLowerCase()).indexOf(newName.toLowerCase()) === -1) {\n            const newRecord = {\n                name: newName,\n                number: newNumber,\n            }\n            console.log(\"adding note...\")\n            serverComm\n            .addNew(newRecord)\n            .then(responseData => {\n                console.log('Exec in then')\n                setRecords(records.concat(responseData))\n                \n                setSuccessMessage(`Successfully added ${newName}.`)\n                \n                setNewName('')\n                setNewNumber('')\n\n                setTimeout(() => {\n                    setSuccessMessage(null)\n                }, 3000)\n            })\n            .catch(error => {\n                setErrorMessage(error.response.data.error)\n\n                setNewName('')\n                setNewNumber('')\n                \n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 3000)                \n            })\n\n        } else {\n            // Update the record then.\n            if (window.confirm(`${newName} already exits.. Do you want to change the number?`)) {\n                \n                const id = records[records.map((record) => \n                    record.name.toLowerCase()).indexOf(newName.toLowerCase())\n                ].id\n                        \n                const newRecord = { name: newName, number: newNumber }\n\n                serverComm\n                .update(id, newRecord)\n                .then(responseData => {\n                    setRecords(records.map(record => record.id === id ? responseData : record))\n                    console.log(responseData)\n                    \n                    setSuccessMessage(`Successfully updated ${newName}.`)\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 3000)\n\n                })\n                .catch(() => {\n                    setErrorMessage(`${newName} has already been deleted.`)\n\n                    setRecords(records.filter((record) => record.name.toLowerCase() !== newName.toLowerCase()))\n                    \n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 2000)\n                })\n\n                setNewName('')\n                setNewNumber('')\n            }\n        }\n    }\n\n    // handles the input field\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    // handles the search field\n    const handleSearchChange = (event) => {\n        setSearchInput(event.target.value)\n        recordsToShow = records.filter((record) => record.name.toLowerCase().includes(searchInput.toLowerCase()))\n    }\n\n    // handles the deletion of records\n    const deleteRecordById = (id) => {\n        if (window.confirm('Do you really want to delete the phone record?'))\n        {\n            serverComm\n            .deleteRecord(id)\n            .then(() => {\n                console.log(`Deleted ${id}`)\n                setRecords(records.filter(record => record.id !== id))\n            })\n            .catch(error => {\n                setErrorMessage(`${records.find((record) => record.id === id).name} has already been deleted.`)\n\n                setRecords(records.filter((record) => record.id !== id))\n\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 2000)\n            })\n        }\n    }\n\n    const searchResult = recordsToShow.length === 0 ? <p>No results found.</p> : <Records records={recordsToShow} deleteRecordById={deleteRecordById} />\n\n    return (\n        <React.Fragment>\n            <h2>Phonebook</h2>\n            \n            <SuccessBox message={successMessage} />\n            <ErrorBox message={errorMessage} />\n\n            <Filter searchInput={searchInput} handleSearchChange={handleSearchChange} />\n            <h3>Add New</h3>\n            <AddForm newName={newName} newNumber={newNumber} handleNumberChange={handleNumberChange} \n                        handleNameChange={handleNameChange} handleClick={handleClick} />\n            <h2>Numbers</h2>\n            {searchResult}\n        </React.Fragment>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}